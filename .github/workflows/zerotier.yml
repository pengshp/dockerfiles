name: ZeroTier

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: true
        default: '1.14.2'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [linux/386, linux/amd64, linux/arm64, linux/arm/v7, linux/arm/v6, linux/ppc64le, linux/riscv64, linux/s390x]
      max-parallel: 8
    outputs:
      version: ${{ steps.prepare.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Prepare
        id: prepare
        run: |
          VERSION=${{ github.event.inputs.version }}
          IMAGE_NAME=zerotier
          TAGS=${{ matrix.architecture }}
          TAGS=gists/${IMAGE_NAME}:${TAGS//\//-}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "build_args=VERSION=${VERSION}" >> $GITHUB_OUTPUT
          echo "image-name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}-${VERSION}" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: ./${{ steps.prepare.outputs.image-name }}
          file: ./${{ steps.prepare.outputs.image-name }}/Dockerfile
          platforms: ${{ matrix.architecture }}
          push: ${{ github.event_name != 'pull_request' }}
          build-args: ${{ steps.prepare.outputs.build_args }}
          tags: ${{ steps.prepare.outputs.tags }}
          provenance: false

  manifest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Manifest create and push
        uses: Noelware/docker-manifest-action@master
        with:
          inputs: gists/zerotier:${{ needs.build.outputs.version }},gists/zerotier:latest
          images: gists/zerotier:linux-386-${{ needs.build.outputs.version }},gists/zerotier:linux-amd64-${{ needs.build.outputs.version }},gists/zerotier:linux-arm64-${{ needs.build.outputs.version }},gists/zerotier:linux-arm-v7-${{ needs.build.outputs.version }},gists/zerotier:linux-arm-v6-${{ needs.build.outputs.version }},gists/zerotier:linux-ppc64le-${{ needs.build.outputs.version }},gists/zerotier:linux-riscv64-${{ needs.build.outputs.version }},gists/zerotier:linux-s390x-${{ needs.build.outputs.version }}
          push: true
